<?php
/**
 * ModelOrder
 *
 * PHP version 5
 *
 * @category Class
 * @package  flagbit\sevdesk\phpclient
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * sevDesk
 *
 * The sevDesk API v1 uses a token authentication.    You need to click on the authorization button (lock symbol) and enter your api-key there.    The token can be found on [https://my.sevdesk.de](https://my.sevdesk.de).    settings-->user-->specific user    # General information    The sevDesk api uses **models** to represent the different categories like **contacts** and **invoices**.    Every time you request such a model from the api, it will return the whole model schema including the unique **model id** and all the other objects and parameters that are included in the model.    Have a look at it in the developer console of your desired browser, especially if you are looking for specific parameters like the model id.    # URL    The basic URL contains four elements. **BaseURL** + **Controller** + **Version** + **Model**: [https://my.sevdesk.de/api/v1/Contact/](https://my.sevdesk.de/api/v1/Contact/)    # Basic Operations    Access a list of models: [https://my.sevdesk.de/api/v1/{Model}/](https://my.sevdesk.de/api/v1/{Model}/)    Access a specific model: [https://my.sevdesk.de/api/v1/{Model}/{id}](https://my.sevdesk.de/api/v1/{Model}/{id})    The **id** of a specific model can usually be found in the **developer console** of your browser or when opening a specific model, in the **url**.    Call a model function: [https://my.sevdesk.de/api/v1/{Model}/{id}/{Function}](https://my.sevdesk.de/api/v1/{Model}/{id}/{Function})    Each operation can be used with different HTTP methods:  * GET - read data  * POST - create data  * PUT - update existing data  * DELETE - delete data    # Useful Parameters    For each request, there are some specific parameters.    **GET Query Parameters**  * **limit** - limits the number of entries returned  * **offset** - set the index where the returned entries should start  * **embed** - embed can be used to get some additional information about a model. For example you can get the addresses of a contact with **embed=addresses**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses`    * If there is a need to get more information about the country in the addresses, embed can be extended by **addresses.country**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses,addresses.country`    * Some models also contain other models. By default these models are only filled with an id and objectName. If you want to get more information about the nested model you can use embed too.    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=parent`    * Every model also has specified 'query parameters'. These can be used to filter the results. E.g. all Contacts with a 'Company' in their name    `[GET]https://my.sevdesk.de/api/v1/Contact/?name=Company`    * **countAll** If countAll is set to 1 the total number of entries will be returned additionally  * **orderBy** Is an array that can be filled with objects containing the the properties field and arrangement    `json: orderBy = [{field:'parent' ,arrangement:'desc'},{field:'name' ,arrangement:'asc'}];`    `url: ?orderBy[0][field]=parent&orderBy[0][arrangement]=desc&orderBy[1][field]=name&orderBy[1][arrangement]=asc`
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace flagbit\sevdesk\phpclient\Model;

use \ArrayAccess;

/**
 * ModelOrder Class Doc Comment
 *
 * @category    Class
 * @package     flagbit\sevdesk\phpclient
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ModelOrder implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'Model_Order';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        '_create' => '\DateTime',
        '_update' => '\DateTime',
        '_oder_number' => 'string',
        '_contact' => '\flagbit\sevdesk\phpclient\Model\ModelContact',
        '_order_date' => '\DateTime',
        '_status' => 'int',
        '_header' => 'string',
        '_head_text' => 'string',
        '_foot_text' => 'string',
        '_address_name' => 'string',
        '_address_street' => 'string',
        '_address_zip' => 'string',
        '_address_city' => 'string',
        '_address_country' => '\flagbit\sevdesk\phpclient\Model\ModelStaticCountry',
        '_create_user' => '\flagbit\sevdesk\phpclient\Model\ModelSevUser',
        '_sev_client' => 'object',
        '_delivery_terms' => 'string',
        '_payment_terms' => 'string',
        '_origin' => 'object',
        '_version' => 'int',
        '_small_settlement' => 'bool',
        '_contact_person' => '\flagbit\sevdesk\phpclient\Model\ModelSevUser',
        '_tax_rate' => 'float',
        '_tax_set' => '\flagbit\sevdesk\phpclient\Model\ModelTaxSet',
        '_tax_text' => 'string',
        '_address_parent_name' => 'string',
        '_address_contact_ref' => '\flagbit\sevdesk\phpclient\Model\ModelContactAddress',
        '_tax_type' => 'string',
        '_order_type' => 'string',
        '_send_date' => '\DateTime',
        '_address_parent_name2' => 'string',
        '_address_name2' => 'string',
        '_address_gender' => 'string',
        '_address' => '\flagbit\sevdesk\phpclient\Model\ModelContactAddress',
        '_currency' => 'string',
        '_sum_net' => 'float',
        '_sum_tax' => 'float',
        '_sum_gross' => 'float',
        '_sum_discounts' => 'float',
        '_sum_net_foreign_currency' => 'float',
        '_sum_tax_foreign_currency' => 'float',
        '_sum_gross_foreign_currency' => 'float',
        '_sum_discounts_foreign_currency' => 'float',
        '_weight' => 'float',
        '_entry_type' => '\flagbit\sevdesk\phpclient\Model\ModelEntryType',
        '_costumer_internal_note' => 'string',
        '_show_net' => 'bool',
        '_send_type' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        '_create' => 'date-time',
        '_update' => 'date-time',
        '_oder_number' => null,
        '_contact' => null,
        '_order_date' => 'date-time',
        '_status' => null,
        '_header' => null,
        '_head_text' => null,
        '_foot_text' => null,
        '_address_name' => null,
        '_address_street' => null,
        '_address_zip' => null,
        '_address_city' => null,
        '_address_country' => null,
        '_create_user' => null,
        '_sev_client' => null,
        '_delivery_terms' => null,
        '_payment_terms' => null,
        '_origin' => null,
        '_version' => null,
        '_small_settlement' => null,
        '_contact_person' => null,
        '_tax_rate' => 'float',
        '_tax_set' => null,
        '_tax_text' => null,
        '_address_parent_name' => null,
        '_address_contact_ref' => null,
        '_tax_type' => null,
        '_order_type' => null,
        '_send_date' => 'date-time',
        '_address_parent_name2' => null,
        '_address_name2' => null,
        '_address_gender' => null,
        '_address' => null,
        '_currency' => null,
        '_sum_net' => 'float',
        '_sum_tax' => 'float',
        '_sum_gross' => 'float',
        '_sum_discounts' => 'float',
        '_sum_net_foreign_currency' => 'float',
        '_sum_tax_foreign_currency' => 'float',
        '_sum_gross_foreign_currency' => 'float',
        '_sum_discounts_foreign_currency' => 'float',
        '_weight' => 'float',
        '_entry_type' => null,
        '_costumer_internal_note' => null,
        '_show_net' => null,
        '_send_type' => null
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        '_create' => '_create',
        '_update' => '_update',
        '_oder_number' => '_oderNumber',
        '_contact' => '_contact',
        '_order_date' => '_orderDate',
        '_status' => '_status',
        '_header' => '_header',
        '_head_text' => '_headText',
        '_foot_text' => '_footText',
        '_address_name' => '_addressName',
        '_address_street' => '_addressStreet',
        '_address_zip' => '_addressZip',
        '_address_city' => '_addressCity',
        '_address_country' => '_addressCountry',
        '_create_user' => '_createUser',
        '_sev_client' => '_sevClient',
        '_delivery_terms' => '_deliveryTerms',
        '_payment_terms' => '_paymentTerms',
        '_origin' => '_origin',
        '_version' => '_version',
        '_small_settlement' => '_smallSettlement',
        '_contact_person' => '_contactPerson',
        '_tax_rate' => '_taxRate',
        '_tax_set' => '_taxSet',
        '_tax_text' => '_taxText',
        '_address_parent_name' => '_addressParentName',
        '_address_contact_ref' => '_addressContactRef',
        '_tax_type' => '_taxType',
        '_order_type' => '_orderType',
        '_send_date' => '_sendDate',
        '_address_parent_name2' => '_addressParentName2',
        '_address_name2' => '_addressName2',
        '_address_gender' => '_addressGender',
        '_address' => '_address',
        '_currency' => '_currency',
        '_sum_net' => '_sumNet',
        '_sum_tax' => '_sumTax',
        '_sum_gross' => '_sumGross',
        '_sum_discounts' => '_sumDiscounts',
        '_sum_net_foreign_currency' => '_sumNetForeignCurrency',
        '_sum_tax_foreign_currency' => '_sumTaxForeignCurrency',
        '_sum_gross_foreign_currency' => '_sumGrossForeignCurrency',
        '_sum_discounts_foreign_currency' => '_sumDiscountsForeignCurrency',
        '_weight' => '_weight',
        '_entry_type' => '_entryType',
        '_costumer_internal_note' => '_costumerInternalNote',
        '_show_net' => '_showNet',
        '_send_type' => '_sendType'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        '_create' => 'setCreate',
        '_update' => 'setUpdate',
        '_oder_number' => 'setOderNumber',
        '_contact' => 'setContact',
        '_order_date' => 'setOrderDate',
        '_status' => 'setStatus',
        '_header' => 'setHeader',
        '_head_text' => 'setHeadText',
        '_foot_text' => 'setFootText',
        '_address_name' => 'setAddressName',
        '_address_street' => 'setAddressStreet',
        '_address_zip' => 'setAddressZip',
        '_address_city' => 'setAddressCity',
        '_address_country' => 'setAddressCountry',
        '_create_user' => 'setCreateUser',
        '_sev_client' => 'setSevClient',
        '_delivery_terms' => 'setDeliveryTerms',
        '_payment_terms' => 'setPaymentTerms',
        '_origin' => 'setOrigin',
        '_version' => 'setVersion',
        '_small_settlement' => 'setSmallSettlement',
        '_contact_person' => 'setContactPerson',
        '_tax_rate' => 'setTaxRate',
        '_tax_set' => 'setTaxSet',
        '_tax_text' => 'setTaxText',
        '_address_parent_name' => 'setAddressParentName',
        '_address_contact_ref' => 'setAddressContactRef',
        '_tax_type' => 'setTaxType',
        '_order_type' => 'setOrderType',
        '_send_date' => 'setSendDate',
        '_address_parent_name2' => 'setAddressParentName2',
        '_address_name2' => 'setAddressName2',
        '_address_gender' => 'setAddressGender',
        '_address' => 'setAddress',
        '_currency' => 'setCurrency',
        '_sum_net' => 'setSumNet',
        '_sum_tax' => 'setSumTax',
        '_sum_gross' => 'setSumGross',
        '_sum_discounts' => 'setSumDiscounts',
        '_sum_net_foreign_currency' => 'setSumNetForeignCurrency',
        '_sum_tax_foreign_currency' => 'setSumTaxForeignCurrency',
        '_sum_gross_foreign_currency' => 'setSumGrossForeignCurrency',
        '_sum_discounts_foreign_currency' => 'setSumDiscountsForeignCurrency',
        '_weight' => 'setWeight',
        '_entry_type' => 'setEntryType',
        '_costumer_internal_note' => 'setCostumerInternalNote',
        '_show_net' => 'setShowNet',
        '_send_type' => 'setSendType'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        '_create' => 'getCreate',
        '_update' => 'getUpdate',
        '_oder_number' => 'getOderNumber',
        '_contact' => 'getContact',
        '_order_date' => 'getOrderDate',
        '_status' => 'getStatus',
        '_header' => 'getHeader',
        '_head_text' => 'getHeadText',
        '_foot_text' => 'getFootText',
        '_address_name' => 'getAddressName',
        '_address_street' => 'getAddressStreet',
        '_address_zip' => 'getAddressZip',
        '_address_city' => 'getAddressCity',
        '_address_country' => 'getAddressCountry',
        '_create_user' => 'getCreateUser',
        '_sev_client' => 'getSevClient',
        '_delivery_terms' => 'getDeliveryTerms',
        '_payment_terms' => 'getPaymentTerms',
        '_origin' => 'getOrigin',
        '_version' => 'getVersion',
        '_small_settlement' => 'getSmallSettlement',
        '_contact_person' => 'getContactPerson',
        '_tax_rate' => 'getTaxRate',
        '_tax_set' => 'getTaxSet',
        '_tax_text' => 'getTaxText',
        '_address_parent_name' => 'getAddressParentName',
        '_address_contact_ref' => 'getAddressContactRef',
        '_tax_type' => 'getTaxType',
        '_order_type' => 'getOrderType',
        '_send_date' => 'getSendDate',
        '_address_parent_name2' => 'getAddressParentName2',
        '_address_name2' => 'getAddressName2',
        '_address_gender' => 'getAddressGender',
        '_address' => 'getAddress',
        '_currency' => 'getCurrency',
        '_sum_net' => 'getSumNet',
        '_sum_tax' => 'getSumTax',
        '_sum_gross' => 'getSumGross',
        '_sum_discounts' => 'getSumDiscounts',
        '_sum_net_foreign_currency' => 'getSumNetForeignCurrency',
        '_sum_tax_foreign_currency' => 'getSumTaxForeignCurrency',
        '_sum_gross_foreign_currency' => 'getSumGrossForeignCurrency',
        '_sum_discounts_foreign_currency' => 'getSumDiscountsForeignCurrency',
        '_weight' => 'getWeight',
        '_entry_type' => 'getEntryType',
        '_costumer_internal_note' => 'getCostumerInternalNote',
        '_show_net' => 'getShowNet',
        '_send_type' => 'getSendType'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['_create'] = isset($data['_create']) ? $data['_create'] : null;
        $this->container['_update'] = isset($data['_update']) ? $data['_update'] : null;
        $this->container['_oder_number'] = isset($data['_oder_number']) ? $data['_oder_number'] : null;
        $this->container['_contact'] = isset($data['_contact']) ? $data['_contact'] : null;
        $this->container['_order_date'] = isset($data['_order_date']) ? $data['_order_date'] : null;
        $this->container['_status'] = isset($data['_status']) ? $data['_status'] : null;
        $this->container['_header'] = isset($data['_header']) ? $data['_header'] : null;
        $this->container['_head_text'] = isset($data['_head_text']) ? $data['_head_text'] : null;
        $this->container['_foot_text'] = isset($data['_foot_text']) ? $data['_foot_text'] : null;
        $this->container['_address_name'] = isset($data['_address_name']) ? $data['_address_name'] : null;
        $this->container['_address_street'] = isset($data['_address_street']) ? $data['_address_street'] : null;
        $this->container['_address_zip'] = isset($data['_address_zip']) ? $data['_address_zip'] : null;
        $this->container['_address_city'] = isset($data['_address_city']) ? $data['_address_city'] : null;
        $this->container['_address_country'] = isset($data['_address_country']) ? $data['_address_country'] : null;
        $this->container['_create_user'] = isset($data['_create_user']) ? $data['_create_user'] : null;
        $this->container['_sev_client'] = isset($data['_sev_client']) ? $data['_sev_client'] : null;
        $this->container['_delivery_terms'] = isset($data['_delivery_terms']) ? $data['_delivery_terms'] : null;
        $this->container['_payment_terms'] = isset($data['_payment_terms']) ? $data['_payment_terms'] : null;
        $this->container['_origin'] = isset($data['_origin']) ? $data['_origin'] : null;
        $this->container['_version'] = isset($data['_version']) ? $data['_version'] : null;
        $this->container['_small_settlement'] = isset($data['_small_settlement']) ? $data['_small_settlement'] : null;
        $this->container['_contact_person'] = isset($data['_contact_person']) ? $data['_contact_person'] : null;
        $this->container['_tax_rate'] = isset($data['_tax_rate']) ? $data['_tax_rate'] : null;
        $this->container['_tax_set'] = isset($data['_tax_set']) ? $data['_tax_set'] : null;
        $this->container['_tax_text'] = isset($data['_tax_text']) ? $data['_tax_text'] : null;
        $this->container['_address_parent_name'] = isset($data['_address_parent_name']) ? $data['_address_parent_name'] : null;
        $this->container['_address_contact_ref'] = isset($data['_address_contact_ref']) ? $data['_address_contact_ref'] : null;
        $this->container['_tax_type'] = isset($data['_tax_type']) ? $data['_tax_type'] : null;
        $this->container['_order_type'] = isset($data['_order_type']) ? $data['_order_type'] : null;
        $this->container['_send_date'] = isset($data['_send_date']) ? $data['_send_date'] : null;
        $this->container['_address_parent_name2'] = isset($data['_address_parent_name2']) ? $data['_address_parent_name2'] : null;
        $this->container['_address_name2'] = isset($data['_address_name2']) ? $data['_address_name2'] : null;
        $this->container['_address_gender'] = isset($data['_address_gender']) ? $data['_address_gender'] : null;
        $this->container['_address'] = isset($data['_address']) ? $data['_address'] : null;
        $this->container['_currency'] = isset($data['_currency']) ? $data['_currency'] : null;
        $this->container['_sum_net'] = isset($data['_sum_net']) ? $data['_sum_net'] : null;
        $this->container['_sum_tax'] = isset($data['_sum_tax']) ? $data['_sum_tax'] : null;
        $this->container['_sum_gross'] = isset($data['_sum_gross']) ? $data['_sum_gross'] : null;
        $this->container['_sum_discounts'] = isset($data['_sum_discounts']) ? $data['_sum_discounts'] : null;
        $this->container['_sum_net_foreign_currency'] = isset($data['_sum_net_foreign_currency']) ? $data['_sum_net_foreign_currency'] : null;
        $this->container['_sum_tax_foreign_currency'] = isset($data['_sum_tax_foreign_currency']) ? $data['_sum_tax_foreign_currency'] : null;
        $this->container['_sum_gross_foreign_currency'] = isset($data['_sum_gross_foreign_currency']) ? $data['_sum_gross_foreign_currency'] : null;
        $this->container['_sum_discounts_foreign_currency'] = isset($data['_sum_discounts_foreign_currency']) ? $data['_sum_discounts_foreign_currency'] : null;
        $this->container['_weight'] = isset($data['_weight']) ? $data['_weight'] : null;
        $this->container['_entry_type'] = isset($data['_entry_type']) ? $data['_entry_type'] : null;
        $this->container['_costumer_internal_note'] = isset($data['_costumer_internal_note']) ? $data['_costumer_internal_note'] : null;
        $this->container['_show_net'] = isset($data['_show_net']) ? $data['_show_net'] : null;
        $this->container['_send_type'] = isset($data['_send_type']) ? $data['_send_type'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets _create
     * @return \DateTime
     */
    public function getCreate()
    {
        return $this->container['_create'];
    }

    /**
     * Sets _create
     * @param \DateTime $_create date the order was created
     * @return $this
     */
    public function setCreate($_create)
    {
        $this->container['_create'] = $_create;

        return $this;
    }

    /**
     * Gets _update
     * @return \DateTime
     */
    public function getUpdate()
    {
        return $this->container['_update'];
    }

    /**
     * Sets _update
     * @param \DateTime $_update date the order was last updated
     * @return $this
     */
    public function setUpdate($_update)
    {
        $this->container['_update'] = $_update;

        return $this;
    }

    /**
     * Gets _oder_number
     * @return string
     */
    public function getOderNumber()
    {
        return $this->container['_oder_number'];
    }

    /**
     * Sets _oder_number
     * @param string $_oder_number 
     * @return $this
     */
    public function setOderNumber($_oder_number)
    {
        $this->container['_oder_number'] = $_oder_number;

        return $this;
    }

    /**
     * Gets _contact
     * @return \flagbit\sevdesk\phpclient\Model\ModelContact
     */
    public function getContact()
    {
        return $this->container['_contact'];
    }

    /**
     * Sets _contact
     * @param \flagbit\sevdesk\phpclient\Model\ModelContact $_contact the Model_Contact which is linked to the order
     * @return $this
     */
    public function setContact($_contact)
    {
        $this->container['_contact'] = $_contact;

        return $this;
    }

    /**
     * Gets _order_date
     * @return \DateTime
     */
    public function getOrderDate()
    {
        return $this->container['_order_date'];
    }

    /**
     * Sets _order_date
     * @param \DateTime $_order_date 
     * @return $this
     */
    public function setOrderDate($_order_date)
    {
        $this->container['_order_date'] = $_order_date;

        return $this;
    }

    /**
     * Gets _status
     * @return int
     */
    public function getStatus()
    {
        return $this->container['_status'];
    }

    /**
     * Sets _status
     * @param int $_status 
     * @return $this
     */
    public function setStatus($_status)
    {
        $this->container['_status'] = $_status;

        return $this;
    }

    /**
     * Gets _header
     * @return string
     */
    public function getHeader()
    {
        return $this->container['_header'];
    }

    /**
     * Sets _header
     * @param string $_header 
     * @return $this
     */
    public function setHeader($_header)
    {
        $this->container['_header'] = $_header;

        return $this;
    }

    /**
     * Gets _head_text
     * @return string
     */
    public function getHeadText()
    {
        return $this->container['_head_text'];
    }

    /**
     * Sets _head_text
     * @param string $_head_text 
     * @return $this
     */
    public function setHeadText($_head_text)
    {
        $this->container['_head_text'] = $_head_text;

        return $this;
    }

    /**
     * Gets _foot_text
     * @return string
     */
    public function getFootText()
    {
        return $this->container['_foot_text'];
    }

    /**
     * Sets _foot_text
     * @param string $_foot_text 
     * @return $this
     */
    public function setFootText($_foot_text)
    {
        $this->container['_foot_text'] = $_foot_text;

        return $this;
    }

    /**
     * Gets _address_name
     * @return string
     */
    public function getAddressName()
    {
        return $this->container['_address_name'];
    }

    /**
     * Sets _address_name
     * @param string $_address_name 
     * @return $this
     */
    public function setAddressName($_address_name)
    {
        $this->container['_address_name'] = $_address_name;

        return $this;
    }

    /**
     * Gets _address_street
     * @return string
     */
    public function getAddressStreet()
    {
        return $this->container['_address_street'];
    }

    /**
     * Sets _address_street
     * @param string $_address_street 
     * @return $this
     */
    public function setAddressStreet($_address_street)
    {
        $this->container['_address_street'] = $_address_street;

        return $this;
    }

    /**
     * Gets _address_zip
     * @return string
     */
    public function getAddressZip()
    {
        return $this->container['_address_zip'];
    }

    /**
     * Sets _address_zip
     * @param string $_address_zip 
     * @return $this
     */
    public function setAddressZip($_address_zip)
    {
        $this->container['_address_zip'] = $_address_zip;

        return $this;
    }

    /**
     * Gets _address_city
     * @return string
     */
    public function getAddressCity()
    {
        return $this->container['_address_city'];
    }

    /**
     * Sets _address_city
     * @param string $_address_city 
     * @return $this
     */
    public function setAddressCity($_address_city)
    {
        $this->container['_address_city'] = $_address_city;

        return $this;
    }

    /**
     * Gets _address_country
     * @return \flagbit\sevdesk\phpclient\Model\ModelStaticCountry
     */
    public function getAddressCountry()
    {
        return $this->container['_address_country'];
    }

    /**
     * Sets _address_country
     * @param \flagbit\sevdesk\phpclient\Model\ModelStaticCountry $_address_country
     * @return $this
     */
    public function setAddressCountry($_address_country)
    {
        $this->container['_address_country'] = $_address_country;

        return $this;
    }

    /**
     * Gets _create_user
     * @return \flagbit\sevdesk\phpclient\Model\ModelSevUser
     */
    public function getCreateUser()
    {
        return $this->container['_create_user'];
    }

    /**
     * Sets _create_user
     * @param \flagbit\sevdesk\phpclient\Model\ModelSevUser $_create_user
     * @return $this
     */
    public function setCreateUser($_create_user)
    {
        $this->container['_create_user'] = $_create_user;

        return $this;
    }

    /**
     * Gets _sev_client
     * @return object
     */
    public function getSevClient()
    {
        return $this->container['_sev_client'];
    }

    /**
     * Sets _sev_client
     * @param object $_sev_client sevClient is the unique id every customer has and is used in nearly all operations
     * @return $this
     */
    public function setSevClient($_sev_client)
    {
        $this->container['_sev_client'] = $_sev_client;

        return $this;
    }

    /**
     * Gets _delivery_terms
     * @return string
     */
    public function getDeliveryTerms()
    {
        return $this->container['_delivery_terms'];
    }

    /**
     * Sets _delivery_terms
     * @param string $_delivery_terms 
     * @return $this
     */
    public function setDeliveryTerms($_delivery_terms)
    {
        $this->container['_delivery_terms'] = $_delivery_terms;

        return $this;
    }

    /**
     * Gets _payment_terms
     * @return string
     */
    public function getPaymentTerms()
    {
        return $this->container['_payment_terms'];
    }

    /**
     * Sets _payment_terms
     * @param string $_payment_terms 
     * @return $this
     */
    public function setPaymentTerms($_payment_terms)
    {
        $this->container['_payment_terms'] = $_payment_terms;

        return $this;
    }

    /**
     * Gets _origin
     * @return object
     */
    public function getOrigin()
    {
        return $this->container['_origin'];
    }

    /**
     * Sets _origin
     * @param object $_origin 
     * @return $this
     */
    public function setOrigin($_origin)
    {
        $this->container['_origin'] = $_origin;

        return $this;
    }

    /**
     * Gets _version
     * @return int
     */
    public function getVersion()
    {
        return $this->container['_version'];
    }

    /**
     * Sets _version
     * @param int $_version 
     * @return $this
     */
    public function setVersion($_version)
    {
        $this->container['_version'] = $_version;

        return $this;
    }

    /**
     * Gets _small_settlement
     * @return bool
     */
    public function getSmallSettlement()
    {
        return $this->container['_small_settlement'];
    }

    /**
     * Sets _small_settlement
     * @param bool $_small_settlement 
     * @return $this
     */
    public function setSmallSettlement($_small_settlement)
    {
        $this->container['_small_settlement'] = $_small_settlement;

        return $this;
    }

    /**
     * Gets _contact_person
     * @return \flagbit\sevdesk\phpclient\Model\ModelSevUser
     */
    public function getContactPerson()
    {
        return $this->container['_contact_person'];
    }

    /**
     * Sets _contact_person
     * @param \flagbit\sevdesk\phpclient\Model\ModelSevUser $_contact_person contact person for the order which is a SevUser
     * @return $this
     */
    public function setContactPerson($_contact_person)
    {
        $this->container['_contact_person'] = $_contact_person;

        return $this;
    }

    /**
     * Gets _tax_rate
     * @return float
     */
    public function getTaxRate()
    {
        return $this->container['_tax_rate'];
    }

    /**
     * Sets _tax_rate
     * @param float $_tax_rate 
     * @return $this
     */
    public function setTaxRate($_tax_rate)
    {
        $this->container['_tax_rate'] = $_tax_rate;

        return $this;
    }

    /**
     * Gets _tax_set
     * @return \flagbit\sevdesk\phpclient\Model\ModelTaxSet
     */
    public function getTaxSet()
    {
        return $this->container['_tax_set'];
    }

    /**
     * Sets _tax_set
     * @param \flagbit\sevdesk\phpclient\Model\ModelTaxSet $_tax_set
     * @return $this
     */
    public function setTaxSet($_tax_set)
    {
        $this->container['_tax_set'] = $_tax_set;

        return $this;
    }

    /**
     * Gets _tax_text
     * @return string
     */
    public function getTaxText()
    {
        return $this->container['_tax_text'];
    }

    /**
     * Sets _tax_text
     * @param string $_tax_text 
     * @return $this
     */
    public function setTaxText($_tax_text)
    {
        $this->container['_tax_text'] = $_tax_text;

        return $this;
    }

    /**
     * Gets _address_parent_name
     * @return string
     */
    public function getAddressParentName()
    {
        return $this->container['_address_parent_name'];
    }

    /**
     * Sets _address_parent_name
     * @param string $_address_parent_name 
     * @return $this
     */
    public function setAddressParentName($_address_parent_name)
    {
        $this->container['_address_parent_name'] = $_address_parent_name;

        return $this;
    }

    /**
     * Gets _address_contact_ref
     * @return \flagbit\sevdesk\phpclient\Model\ModelContactAddress
     */
    public function getAddressContactRef()
    {
        return $this->container['_address_contact_ref'];
    }

    /**
     * Sets _address_contact_ref
     * @param \flagbit\sevdesk\phpclient\Model\ModelContactAddress $_address_contact_ref
     * @return $this
     */
    public function setAddressContactRef($_address_contact_ref)
    {
        $this->container['_address_contact_ref'] = $_address_contact_ref;

        return $this;
    }

    /**
     * Gets _tax_type
     * @return string
     */
    public function getTaxType()
    {
        return $this->container['_tax_type'];
    }

    /**
     * Sets _tax_type
     * @param string $_tax_type 
     * @return $this
     */
    public function setTaxType($_tax_type)
    {
        $this->container['_tax_type'] = $_tax_type;

        return $this;
    }

    /**
     * Gets _order_type
     * @return string
     */
    public function getOrderType()
    {
        return $this->container['_order_type'];
    }

    /**
     * Sets _order_type
     * @param string $_order_type 
     * @return $this
     */
    public function setOrderType($_order_type)
    {
        $this->container['_order_type'] = $_order_type;

        return $this;
    }

    /**
     * Gets _send_date
     * @return \DateTime
     */
    public function getSendDate()
    {
        return $this->container['_send_date'];
    }

    /**
     * Sets _send_date
     * @param \DateTime $_send_date date the order was sent
     * @return $this
     */
    public function setSendDate($_send_date)
    {
        $this->container['_send_date'] = $_send_date;

        return $this;
    }

    /**
     * Gets _address_parent_name2
     * @return string
     */
    public function getAddressParentName2()
    {
        return $this->container['_address_parent_name2'];
    }

    /**
     * Sets _address_parent_name2
     * @param string $_address_parent_name2 
     * @return $this
     */
    public function setAddressParentName2($_address_parent_name2)
    {
        $this->container['_address_parent_name2'] = $_address_parent_name2;

        return $this;
    }

    /**
     * Gets _address_name2
     * @return string
     */
    public function getAddressName2()
    {
        return $this->container['_address_name2'];
    }

    /**
     * Sets _address_name2
     * @param string $_address_name2 
     * @return $this
     */
    public function setAddressName2($_address_name2)
    {
        $this->container['_address_name2'] = $_address_name2;

        return $this;
    }

    /**
     * Gets _address_gender
     * @return string
     */
    public function getAddressGender()
    {
        return $this->container['_address_gender'];
    }

    /**
     * Sets _address_gender
     * @param string $_address_gender 
     * @return $this
     */
    public function setAddressGender($_address_gender)
    {
        $this->container['_address_gender'] = $_address_gender;

        return $this;
    }

    /**
     * Gets _address
     * @return \flagbit\sevdesk\phpclient\Model\ModelContactAddress
     */
    public function getAddress()
    {
        return $this->container['_address'];
    }

    /**
     * Sets _address
     * @param \flagbit\sevdesk\phpclient\Model\ModelContactAddress $_address concatenation of address attributes acquired from Model_Contact->Model_ContactAddress
     * @return $this
     */
    public function setAddress($_address)
    {
        $this->container['_address'] = $_address;

        return $this;
    }

    /**
     * Gets _currency
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['_currency'];
    }

    /**
     * Sets _currency
     * @param string $_currency 
     * @return $this
     */
    public function setCurrency($_currency)
    {
        $this->container['_currency'] = $_currency;

        return $this;
    }

    /**
     * Gets _sum_net
     * @return float
     */
    public function getSumNet()
    {
        return $this->container['_sum_net'];
    }

    /**
     * Sets _sum_net
     * @param float $_sum_net 
     * @return $this
     */
    public function setSumNet($_sum_net)
    {
        $this->container['_sum_net'] = $_sum_net;

        return $this;
    }

    /**
     * Gets _sum_tax
     * @return float
     */
    public function getSumTax()
    {
        return $this->container['_sum_tax'];
    }

    /**
     * Sets _sum_tax
     * @param float $_sum_tax 
     * @return $this
     */
    public function setSumTax($_sum_tax)
    {
        $this->container['_sum_tax'] = $_sum_tax;

        return $this;
    }

    /**
     * Gets _sum_gross
     * @return float
     */
    public function getSumGross()
    {
        return $this->container['_sum_gross'];
    }

    /**
     * Sets _sum_gross
     * @param float $_sum_gross 
     * @return $this
     */
    public function setSumGross($_sum_gross)
    {
        $this->container['_sum_gross'] = $_sum_gross;

        return $this;
    }

    /**
     * Gets _sum_discounts
     * @return float
     */
    public function getSumDiscounts()
    {
        return $this->container['_sum_discounts'];
    }

    /**
     * Sets _sum_discounts
     * @param float $_sum_discounts 
     * @return $this
     */
    public function setSumDiscounts($_sum_discounts)
    {
        $this->container['_sum_discounts'] = $_sum_discounts;

        return $this;
    }

    /**
     * Gets _sum_net_foreign_currency
     * @return float
     */
    public function getSumNetForeignCurrency()
    {
        return $this->container['_sum_net_foreign_currency'];
    }

    /**
     * Sets _sum_net_foreign_currency
     * @param float $_sum_net_foreign_currency 
     * @return $this
     */
    public function setSumNetForeignCurrency($_sum_net_foreign_currency)
    {
        $this->container['_sum_net_foreign_currency'] = $_sum_net_foreign_currency;

        return $this;
    }

    /**
     * Gets _sum_tax_foreign_currency
     * @return float
     */
    public function getSumTaxForeignCurrency()
    {
        return $this->container['_sum_tax_foreign_currency'];
    }

    /**
     * Sets _sum_tax_foreign_currency
     * @param float $_sum_tax_foreign_currency 
     * @return $this
     */
    public function setSumTaxForeignCurrency($_sum_tax_foreign_currency)
    {
        $this->container['_sum_tax_foreign_currency'] = $_sum_tax_foreign_currency;

        return $this;
    }

    /**
     * Gets _sum_gross_foreign_currency
     * @return float
     */
    public function getSumGrossForeignCurrency()
    {
        return $this->container['_sum_gross_foreign_currency'];
    }

    /**
     * Sets _sum_gross_foreign_currency
     * @param float $_sum_gross_foreign_currency 
     * @return $this
     */
    public function setSumGrossForeignCurrency($_sum_gross_foreign_currency)
    {
        $this->container['_sum_gross_foreign_currency'] = $_sum_gross_foreign_currency;

        return $this;
    }

    /**
     * Gets _sum_discounts_foreign_currency
     * @return float
     */
    public function getSumDiscountsForeignCurrency()
    {
        return $this->container['_sum_discounts_foreign_currency'];
    }

    /**
     * Sets _sum_discounts_foreign_currency
     * @param float $_sum_discounts_foreign_currency 
     * @return $this
     */
    public function setSumDiscountsForeignCurrency($_sum_discounts_foreign_currency)
    {
        $this->container['_sum_discounts_foreign_currency'] = $_sum_discounts_foreign_currency;

        return $this;
    }

    /**
     * Gets _weight
     * @return float
     */
    public function getWeight()
    {
        return $this->container['_weight'];
    }

    /**
     * Sets _weight
     * @param float $_weight 
     * @return $this
     */
    public function setWeight($_weight)
    {
        $this->container['_weight'] = $_weight;

        return $this;
    }

    /**
     * Gets _entry_type
     * @return \flagbit\sevdesk\phpclient\Model\ModelEntryType
     */
    public function getEntryType()
    {
        return $this->container['_entry_type'];
    }

    /**
     * Sets _entry_type
     * @param \flagbit\sevdesk\phpclient\Model\ModelEntryType $_entry_type
     * @return $this
     */
    public function setEntryType($_entry_type)
    {
        $this->container['_entry_type'] = $_entry_type;

        return $this;
    }

    /**
     * Gets _costumer_internal_note
     * @return string
     */
    public function getCostumerInternalNote()
    {
        return $this->container['_costumer_internal_note'];
    }

    /**
     * Sets _costumer_internal_note
     * @param string $_costumer_internal_note 
     * @return $this
     */
    public function setCostumerInternalNote($_costumer_internal_note)
    {
        $this->container['_costumer_internal_note'] = $_costumer_internal_note;

        return $this;
    }

    /**
     * Gets _show_net
     * @return bool
     */
    public function getShowNet()
    {
        return $this->container['_show_net'];
    }

    /**
     * Sets _show_net
     * @param bool $_show_net 
     * @return $this
     */
    public function setShowNet($_show_net)
    {
        $this->container['_show_net'] = $_show_net;

        return $this;
    }

    /**
     * Gets _send_type
     * @return string
     */
    public function getSendType()
    {
        return $this->container['_send_type'];
    }

    /**
     * Sets _send_type
     * @param string $_send_type 
     * @return $this
     */
    public function setSendType($_send_type)
    {
        $this->container['_send_type'] = $_send_type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\flagbit\sevdesk\phpclient\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\flagbit\sevdesk\phpclient\ObjectSerializer::sanitizeForSerialization($this));
    }
}


