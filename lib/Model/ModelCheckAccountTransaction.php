<?php
/**
 * ModelCheckAccountTransaction
 *
 * PHP version 5
 *
 * @category Class
 * @package  flagbit\sevdesk\phpclient
 * @author   Swaagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * sevDesk
 *
 * The sevDesk API v1 uses a token authentication.    You need to click on the authorization button (lock symbol) and enter your api-key there.    The token can be found on [https://my.sevdesk.de](https://my.sevdesk.de).    settings-->user-->specific user    # General information    The sevDesk api uses **models** to represent the different categories like **contacts** and **invoices**.    Every time you request such a model from the api, it will return the whole model schema including the unique **model id** and all the other objects and parameters that are included in the model.    Have a look at it in the developer console of your desired browser, especially if you are looking for specific parameters like the model id.    # URL    The basic URL contains four elements. **BaseURL** + **Controller** + **Version** + **Model**: [https://my.sevdesk.de/api/v1/Contact/](https://my.sevdesk.de/api/v1/Contact/)    # Basic Operations    Access a list of models: [https://my.sevdesk.de/api/v1/{Model}/](https://my.sevdesk.de/api/v1/{Model}/)    Access a specific model: [https://my.sevdesk.de/api/v1/{Model}/{id}](https://my.sevdesk.de/api/v1/{Model}/{id})    The **id** of a specific model can usually be found in the **developer console** of your browser or when opening a specific model, in the **url**.    Call a model function: [https://my.sevdesk.de/api/v1/{Model}/{id}/{Function}](https://my.sevdesk.de/api/v1/{Model}/{id}/{Function})    Each operation can be used with different HTTP methods:  * GET - read data  * POST - create data  * PUT - update existing data  * DELETE - delete data    # Useful Parameters    For each request, there are some specific parameters.    **GET Query Parameters**  * **limit** - limits the number of entries returned  * **offset** - set the index where the returned entries should start  * **embed** - embed can be used to get some additional information about a model. For example you can get the addresses of a contact with **embed=addresses**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses`    * If there is a need to get more information about the country in the addresses, embed can be extended by **addresses.country**    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=addresses,addresses.country`    * Some models also contain other models. By default these models are only filled with an id and objectName. If you want to get more information about the nested model you can use embed too.    `[GET]https://my.sevdesk.de/api/v1/Contact/?embed=parent`    * Every model also has specified 'query parameters'. These can be used to filter the results. E.g. all Contacts with a 'Company' in their name    `[GET]https://my.sevdesk.de/api/v1/Contact/?name=Company`    * **countAll** If countAll is set to 1 the total number of entries will be returned additionally  * **orderBy** Is an array that can be filled with objects containing the the properties field and arrangement    `json: orderBy = [{field:'parent' ,arrangement:'desc'},{field:'name' ,arrangement:'asc'}];`    `url: ?orderBy[0][field]=parent&orderBy[0][arrangement]=desc&orderBy[1][field]=name&orderBy[1][arrangement]=asc`
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace flagbit\sevdesk\phpclient\Model;

use \ArrayAccess;

/**
 * ModelCheckAccountTransaction Class Doc Comment
 *
 * @category    Class
 * @package     flagbit\sevdesk\phpclient
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class ModelCheckAccountTransaction implements ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      * @var string
      */
    protected static $swaggerModelName = 'Model_CheckAccountTransaction';

    /**
      * Array of property to type mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerTypes = [
        '_create' => '\DateTime',
        '_update' => '\DateTime',
        '_sev_client' => 'object',
        '_value_date' => '\DateTime',
        '_entry_date' => '\DateTime',
        '_amount' => 'float',
        '_gv_code' => 'string',
        '_entry_text' => 'string',
        '_prima_nota_no' => 'string',
        '_paymt_purpose' => 'string',
        '_payee_payer_bank_code' => 'string',
        '_payee_payer_acct_no' => 'string',
        '_payee_payer_name' => 'string',
        '_check_account' => '\flagbit\sevdesk\phpclient\Model\ModelCheckAccount',
        '_status' => 'int',
        '_score' => 'string',
        '_compare_hash' => 'string',
        '_entry_type' => 'object',
        '_enshrined' => 'bool',
        '_source_transaction' => 'object',
        '_target_transaction' => 'object',
        '_obono_receipt_uuid' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      * @var string[]
      */
    protected static $swaggerFormats = [
        '_create' => 'date-time',
        '_update' => 'date-time',
        '_sev_client' => null,
        '_value_date' => 'date-time',
        '_entry_date' => 'date-time',
        '_amount' => 'float',
        '_gv_code' => null,
        '_entry_text' => null,
        '_prima_nota_no' => null,
        '_paymt_purpose' => null,
        '_payee_payer_bank_code' => null,
        '_payee_payer_acct_no' => null,
        '_payee_payer_name' => null,
        '_check_account' => null,
        '_status' => null,
        '_score' => null,
        '_compare_hash' => null,
        '_entry_type' => null,
        '_enshrined' => null,
        '_source_transaction' => null,
        '_target_transaction' => null,
        '_obono_receipt_uuid' => null
    ];

    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name, and the value is the original name
     * @var string[]
     */
    protected static $attributeMap = [
        '_create' => '_create',
        '_update' => '_update',
        '_sev_client' => '_sevClient',
        '_value_date' => '_valueDate',
        '_entry_date' => '_entryDate',
        '_amount' => '_amount',
        '_gv_code' => '_gvCode',
        '_entry_text' => '_entryText',
        '_prima_nota_no' => '_primaNotaNo',
        '_paymt_purpose' => '_paymtPurpose',
        '_payee_payer_bank_code' => '_payeePayerBankCode',
        '_payee_payer_acct_no' => '_payeePayerAcctNo',
        '_payee_payer_name' => '_payeePayerName',
        '_check_account' => '_checkAccount',
        '_status' => '_status',
        '_score' => '_score',
        '_compare_hash' => '_compareHash',
        '_entry_type' => '_entryType',
        '_enshrined' => '_enshrined',
        '_source_transaction' => '_sourceTransaction',
        '_target_transaction' => '_targetTransaction',
        '_obono_receipt_uuid' => '_obonoReceiptUuid'
    ];


    /**
     * Array of attributes to setter functions (for deserialization of responses)
     * @var string[]
     */
    protected static $setters = [
        '_create' => 'setCreate',
        '_update' => 'setUpdate',
        '_sev_client' => 'setSevClient',
        '_value_date' => 'setValueDate',
        '_entry_date' => 'setEntryDate',
        '_amount' => 'setAmount',
        '_gv_code' => 'setGvCode',
        '_entry_text' => 'setEntryText',
        '_prima_nota_no' => 'setPrimaNotaNo',
        '_paymt_purpose' => 'setPaymtPurpose',
        '_payee_payer_bank_code' => 'setPayeePayerBankCode',
        '_payee_payer_acct_no' => 'setPayeePayerAcctNo',
        '_payee_payer_name' => 'setPayeePayerName',
        '_check_account' => 'setCheckAccount',
        '_status' => 'setStatus',
        '_score' => 'setScore',
        '_compare_hash' => 'setCompareHash',
        '_entry_type' => 'setEntryType',
        '_enshrined' => 'setEnshrined',
        '_source_transaction' => 'setSourceTransaction',
        '_target_transaction' => 'setTargetTransaction',
        '_obono_receipt_uuid' => 'setObonoReceiptUuid'
    ];


    /**
     * Array of attributes to getter functions (for serialization of requests)
     * @var string[]
     */
    protected static $getters = [
        '_create' => 'getCreate',
        '_update' => 'getUpdate',
        '_sev_client' => 'getSevClient',
        '_value_date' => 'getValueDate',
        '_entry_date' => 'getEntryDate',
        '_amount' => 'getAmount',
        '_gv_code' => 'getGvCode',
        '_entry_text' => 'getEntryText',
        '_prima_nota_no' => 'getPrimaNotaNo',
        '_paymt_purpose' => 'getPaymtPurpose',
        '_payee_payer_bank_code' => 'getPayeePayerBankCode',
        '_payee_payer_acct_no' => 'getPayeePayerAcctNo',
        '_payee_payer_name' => 'getPayeePayerName',
        '_check_account' => 'getCheckAccount',
        '_status' => 'getStatus',
        '_score' => 'getScore',
        '_compare_hash' => 'getCompareHash',
        '_entry_type' => 'getEntryType',
        '_enshrined' => 'getEnshrined',
        '_source_transaction' => 'getSourceTransaction',
        '_target_transaction' => 'getTargetTransaction',
        '_obono_receipt_uuid' => 'getObonoReceiptUuid'
    ];

    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    public static function setters()
    {
        return self::$setters;
    }

    public static function getters()
    {
        return self::$getters;
    }

    

    

    /**
     * Associative array for storing property values
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     * @param mixed[] $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['_create'] = isset($data['_create']) ? $data['_create'] : null;
        $this->container['_update'] = isset($data['_update']) ? $data['_update'] : null;
        $this->container['_sev_client'] = isset($data['_sev_client']) ? $data['_sev_client'] : null;
        $this->container['_value_date'] = isset($data['_value_date']) ? $data['_value_date'] : null;
        $this->container['_entry_date'] = isset($data['_entry_date']) ? $data['_entry_date'] : null;
        $this->container['_amount'] = isset($data['_amount']) ? $data['_amount'] : null;
        $this->container['_gv_code'] = isset($data['_gv_code']) ? $data['_gv_code'] : null;
        $this->container['_entry_text'] = isset($data['_entry_text']) ? $data['_entry_text'] : null;
        $this->container['_prima_nota_no'] = isset($data['_prima_nota_no']) ? $data['_prima_nota_no'] : null;
        $this->container['_paymt_purpose'] = isset($data['_paymt_purpose']) ? $data['_paymt_purpose'] : null;
        $this->container['_payee_payer_bank_code'] = isset($data['_payee_payer_bank_code']) ? $data['_payee_payer_bank_code'] : null;
        $this->container['_payee_payer_acct_no'] = isset($data['_payee_payer_acct_no']) ? $data['_payee_payer_acct_no'] : null;
        $this->container['_payee_payer_name'] = isset($data['_payee_payer_name']) ? $data['_payee_payer_name'] : null;
        $this->container['_check_account'] = isset($data['_check_account']) ? $data['_check_account'] : null;
        $this->container['_status'] = isset($data['_status']) ? $data['_status'] : null;
        $this->container['_score'] = isset($data['_score']) ? $data['_score'] : null;
        $this->container['_compare_hash'] = isset($data['_compare_hash']) ? $data['_compare_hash'] : null;
        $this->container['_entry_type'] = isset($data['_entry_type']) ? $data['_entry_type'] : null;
        $this->container['_enshrined'] = isset($data['_enshrined']) ? $data['_enshrined'] : null;
        $this->container['_source_transaction'] = isset($data['_source_transaction']) ? $data['_source_transaction'] : null;
        $this->container['_target_transaction'] = isset($data['_target_transaction']) ? $data['_target_transaction'] : null;
        $this->container['_obono_receipt_uuid'] = isset($data['_obono_receipt_uuid']) ? $data['_obono_receipt_uuid'] : null;
    }

    /**
     * show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalid_properties = [];

        return $invalid_properties;
    }

    /**
     * validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets _create
     * @return \DateTime
     */
    public function getCreate()
    {
        return $this->container['_create'];
    }

    /**
     * Sets _create
     * @param \DateTime $_create date the check account transaction was created
     * @return $this
     */
    public function setCreate($_create)
    {
        $this->container['_create'] = $_create;

        return $this;
    }

    /**
     * Gets _update
     * @return \DateTime
     */
    public function getUpdate()
    {
        return $this->container['_update'];
    }

    /**
     * Sets _update
     * @param \DateTime $_update date the check account transaction was last updated
     * @return $this
     */
    public function setUpdate($_update)
    {
        $this->container['_update'] = $_update;

        return $this;
    }

    /**
     * Gets _sev_client
     * @return object
     */
    public function getSevClient()
    {
        return $this->container['_sev_client'];
    }

    /**
     * Sets _sev_client
     * @param object $_sev_client sevClient is the unique id every customer has and is used in nearly all operations
     * @return $this
     */
    public function setSevClient($_sev_client)
    {
        $this->container['_sev_client'] = $_sev_client;

        return $this;
    }

    /**
     * Gets _value_date
     * @return \DateTime
     */
    public function getValueDate()
    {
        return $this->container['_value_date'];
    }

    /**
     * Sets _value_date
     * @param \DateTime $_value_date 
     * @return $this
     */
    public function setValueDate($_value_date)
    {
        $this->container['_value_date'] = $_value_date;

        return $this;
    }

    /**
     * Gets _entry_date
     * @return \DateTime
     */
    public function getEntryDate()
    {
        return $this->container['_entry_date'];
    }

    /**
     * Sets _entry_date
     * @param \DateTime $_entry_date 
     * @return $this
     */
    public function setEntryDate($_entry_date)
    {
        $this->container['_entry_date'] = $_entry_date;

        return $this;
    }

    /**
     * Gets _amount
     * @return float
     */
    public function getAmount()
    {
        return $this->container['_amount'];
    }

    /**
     * Sets _amount
     * @param float $_amount amount of the transaction
     * @return $this
     */
    public function setAmount($_amount)
    {
        $this->container['_amount'] = $_amount;

        return $this;
    }

    /**
     * Gets _gv_code
     * @return string
     */
    public function getGvCode()
    {
        return $this->container['_gv_code'];
    }

    /**
     * Sets _gv_code
     * @param string $_gv_code 
     * @return $this
     */
    public function setGvCode($_gv_code)
    {
        $this->container['_gv_code'] = $_gv_code;

        return $this;
    }

    /**
     * Gets _entry_text
     * @return string
     */
    public function getEntryText()
    {
        return $this->container['_entry_text'];
    }

    /**
     * Sets _entry_text
     * @param string $_entry_text 
     * @return $this
     */
    public function setEntryText($_entry_text)
    {
        $this->container['_entry_text'] = $_entry_text;

        return $this;
    }

    /**
     * Gets _prima_nota_no
     * @return string
     */
    public function getPrimaNotaNo()
    {
        return $this->container['_prima_nota_no'];
    }

    /**
     * Sets _prima_nota_no
     * @param string $_prima_nota_no 
     * @return $this
     */
    public function setPrimaNotaNo($_prima_nota_no)
    {
        $this->container['_prima_nota_no'] = $_prima_nota_no;

        return $this;
    }

    /**
     * Gets _paymt_purpose
     * @return string
     */
    public function getPaymtPurpose()
    {
        return $this->container['_paymt_purpose'];
    }

    /**
     * Sets _paymt_purpose
     * @param string $_paymt_purpose 
     * @return $this
     */
    public function setPaymtPurpose($_paymt_purpose)
    {
        $this->container['_paymt_purpose'] = $_paymt_purpose;

        return $this;
    }

    /**
     * Gets _payee_payer_bank_code
     * @return string
     */
    public function getPayeePayerBankCode()
    {
        return $this->container['_payee_payer_bank_code'];
    }

    /**
     * Sets _payee_payer_bank_code
     * @param string $_payee_payer_bank_code payer bank code
     * @return $this
     */
    public function setPayeePayerBankCode($_payee_payer_bank_code)
    {
        $this->container['_payee_payer_bank_code'] = $_payee_payer_bank_code;

        return $this;
    }

    /**
     * Gets _payee_payer_acct_no
     * @return string
     */
    public function getPayeePayerAcctNo()
    {
        return $this->container['_payee_payer_acct_no'];
    }

    /**
     * Sets _payee_payer_acct_no
     * @param string $_payee_payer_acct_no payer account number
     * @return $this
     */
    public function setPayeePayerAcctNo($_payee_payer_acct_no)
    {
        $this->container['_payee_payer_acct_no'] = $_payee_payer_acct_no;

        return $this;
    }

    /**
     * Gets _payee_payer_name
     * @return string
     */
    public function getPayeePayerName()
    {
        return $this->container['_payee_payer_name'];
    }

    /**
     * Sets _payee_payer_name
     * @param string $_payee_payer_name payer name
     * @return $this
     */
    public function setPayeePayerName($_payee_payer_name)
    {
        $this->container['_payee_payer_name'] = $_payee_payer_name;

        return $this;
    }

    /**
     * Gets _check_account
     * @return \flagbit\sevdesk\phpclient\Model\ModelCheckAccount
     */
    public function getCheckAccount()
    {
        return $this->container['_check_account'];
    }

    /**
     * Sets _check_account
     * @param \flagbit\sevdesk\phpclient\Model\ModelCheckAccount $_check_account id of the check account
     * @return $this
     */
    public function setCheckAccount($_check_account)
    {
        $this->container['_check_account'] = $_check_account;

        return $this;
    }

    /**
     * Gets _status
     * @return int
     */
    public function getStatus()
    {
        return $this->container['_status'];
    }

    /**
     * Sets _status
     * @param int $_status 
     * @return $this
     */
    public function setStatus($_status)
    {
        $this->container['_status'] = $_status;

        return $this;
    }

    /**
     * Gets _score
     * @return string
     */
    public function getScore()
    {
        return $this->container['_score'];
    }

    /**
     * Sets _score
     * @param string $_score 
     * @return $this
     */
    public function setScore($_score)
    {
        $this->container['_score'] = $_score;

        return $this;
    }

    /**
     * Gets _compare_hash
     * @return string
     */
    public function getCompareHash()
    {
        return $this->container['_compare_hash'];
    }

    /**
     * Sets _compare_hash
     * @param string $_compare_hash hash to be compared
     * @return $this
     */
    public function setCompareHash($_compare_hash)
    {
        $this->container['_compare_hash'] = $_compare_hash;

        return $this;
    }

    /**
     * Gets _entry_type
     * @return object
     */
    public function getEntryType()
    {
        return $this->container['_entry_type'];
    }

    /**
     * Sets _entry_type
     * @param object $_entry_type 
     * @return $this
     */
    public function setEntryType($_entry_type)
    {
        $this->container['_entry_type'] = $_entry_type;

        return $this;
    }

    /**
     * Gets _enshrined
     * @return bool
     */
    public function getEnshrined()
    {
        return $this->container['_enshrined'];
    }

    /**
     * Sets _enshrined
     * @param bool $_enshrined 
     * @return $this
     */
    public function setEnshrined($_enshrined)
    {
        $this->container['_enshrined'] = $_enshrined;

        return $this;
    }

    /**
     * Gets _source_transaction
     * @return object
     */
    public function getSourceTransaction()
    {
        return $this->container['_source_transaction'];
    }

    /**
     * Sets _source_transaction
     * @param object $_source_transaction source check account transaction used for transfers
     * @return $this
     */
    public function setSourceTransaction($_source_transaction)
    {
        $this->container['_source_transaction'] = $_source_transaction;

        return $this;
    }

    /**
     * Gets _target_transaction
     * @return object
     */
    public function getTargetTransaction()
    {
        return $this->container['_target_transaction'];
    }

    /**
     * Sets _target_transaction
     * @param object $_target_transaction destination check account transaction used for transfers
     * @return $this
     */
    public function setTargetTransaction($_target_transaction)
    {
        $this->container['_target_transaction'] = $_target_transaction;

        return $this;
    }

    /**
     * Gets _obono_receipt_uuid
     * @return string
     */
    public function getObonoReceiptUuid()
    {
        return $this->container['_obono_receipt_uuid'];
    }

    /**
     * Sets _obono_receipt_uuid
     * @param string $_obono_receipt_uuid 
     * @return $this
     */
    public function setObonoReceiptUuid($_obono_receipt_uuid)
    {
        $this->container['_obono_receipt_uuid'] = $_obono_receipt_uuid;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     * @param  integer $offset Offset
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     * @param  integer $offset Offset
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     * @param  integer $offset Offset
     * @param  mixed   $value  Value to be set
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     * @param  integer $offset Offset
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(\flagbit\sevdesk\phpclient\ObjectSerializer::sanitizeForSerialization($this), JSON_PRETTY_PRINT);
        }

        return json_encode(\flagbit\sevdesk\phpclient\ObjectSerializer::sanitizeForSerialization($this));
    }
}


